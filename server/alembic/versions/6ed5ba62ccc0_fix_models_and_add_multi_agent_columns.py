"""Fix models and add multi-agent columns

Revision ID: 6ed5ba62ccc0
Revises: 1ca8f29c2696
Create Date: 2025-10-26 17:58:31.716897

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6ed5ba62ccc0'
down_revision: Union[str, None] = '1ca8f29c2696'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('artifacts', sa.Column('filename', sa.String(), nullable=False))
    op.add_column('artifacts', sa.Column('minio_path', sa.String(), nullable=True))
    op.drop_constraint('artifacts_run_id_fkey', 'artifacts', type_='foreignkey')
    op.create_foreign_key(None, 'artifacts', 'runs', ['run_id'], ['id'])
    op.drop_column('artifacts', 'file_name')
    op.drop_column('artifacts', 'file_size')
    op.add_column('run_logs', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.drop_constraint('run_logs_run_id_fkey', 'run_logs', type_='foreignkey')
    op.create_foreign_key(None, 'run_logs', 'runs', ['run_id'], ['id'])
    op.drop_column('run_logs', 'timestamp')
    op.add_column('test_results', sa.Column('duration_seconds', sa.Integer(), nullable=True))
    op.drop_constraint('test_results_run_id_fkey', 'test_results', type_='foreignkey')
    op.create_foreign_key(None, 'test_results', 'runs', ['run_id'], ['id'])
    op.drop_column('test_results', 'duration')
    op.drop_column('test_results', 'test_data')
    op.drop_column('test_results', 'error_traceback')
    op.drop_column('test_results', 'test_file')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('test_results', sa.Column('test_file', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('test_results', sa.Column('error_traceback', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('test_results', sa.Column('test_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('test_results', sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'test_results', type_='foreignkey')
    op.create_foreign_key('test_results_run_id_fkey', 'test_results', 'runs', ['run_id'], ['id'], ondelete='CASCADE')
    op.drop_column('test_results', 'duration_seconds')
    op.add_column('run_logs', sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'run_logs', type_='foreignkey')
    op.create_foreign_key('run_logs_run_id_fkey', 'run_logs', 'runs', ['run_id'], ['id'], ondelete='CASCADE')
    op.drop_column('run_logs', 'created_at')
    op.add_column('artifacts', sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('artifacts', sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'artifacts', type_='foreignkey')
    op.create_foreign_key('artifacts_run_id_fkey', 'artifacts', 'runs', ['run_id'], ['id'], ondelete='CASCADE')
    op.drop_column('artifacts', 'minio_path')
    op.drop_column('artifacts', 'filename')
    # ### end Alembic commands ###
