"""Add multi-agent system columns

Revision ID: 1ca8f29c2696
Revises: 4c924e4fc76b
Create Date: 2025-10-26 17:42:51.007851

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1ca8f29c2696'
down_revision: Union[str, None] = '4c924e4fc76b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('runs', sa.Column('test_creation_mode', sa.String(), nullable=True))
    op.add_column('runs', sa.Column('user_story', sa.Text(), nullable=True))
    op.add_column('runs', sa.Column('final_story', sa.Text(), nullable=True))
    op.add_column('runs', sa.Column('story_source', sa.String(), nullable=True))
    op.add_column('runs', sa.Column('story_model', sa.String(), nullable=True))
    op.add_column('runs', sa.Column('recorded_test_path', sa.String(), nullable=True))
    op.add_column('runs', sa.Column('recording_analysis', sa.JSON(), nullable=True))
    op.add_column('runs', sa.Column('scenarios_count', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('scenario_model', sa.String(), nullable=True))
    op.add_column('runs', sa.Column('tests_count', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('code_model', sa.String(), nullable=True))
    op.add_column('runs', sa.Column('pages_discovered', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('elements_discovered', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('tests_passed', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('tests_failed', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('tests_total', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('healing_attempts', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('is_healed', sa.Boolean(), nullable=True))
    op.add_column('runs', sa.Column('discovery_duration_seconds', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('story_duration_seconds', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('scenario_duration_seconds', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('code_duration_seconds', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('execution_duration_seconds', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('healing_duration_seconds', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('total_duration_seconds', sa.Integer(), nullable=True))
    op.add_column('runs', sa.Column('agent_metadata', sa.JSON(), nullable=True))
    op.alter_column('runs', 'scenario',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('runs', 'scenario',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('runs', 'agent_metadata')
    op.drop_column('runs', 'total_duration_seconds')
    op.drop_column('runs', 'healing_duration_seconds')
    op.drop_column('runs', 'execution_duration_seconds')
    op.drop_column('runs', 'code_duration_seconds')
    op.drop_column('runs', 'scenario_duration_seconds')
    op.drop_column('runs', 'story_duration_seconds')
    op.drop_column('runs', 'discovery_duration_seconds')
    op.drop_column('runs', 'is_healed')
    op.drop_column('runs', 'healing_attempts')
    op.drop_column('runs', 'tests_total')
    op.drop_column('runs', 'tests_failed')
    op.drop_column('runs', 'tests_passed')
    op.drop_column('runs', 'elements_discovered')
    op.drop_column('runs', 'pages_discovered')
    op.drop_column('runs', 'code_model')
    op.drop_column('runs', 'tests_count')
    op.drop_column('runs', 'scenario_model')
    op.drop_column('runs', 'scenarios_count')
    op.drop_column('runs', 'recording_analysis')
    op.drop_column('runs', 'recorded_test_path')
    op.drop_column('runs', 'story_model')
    op.drop_column('runs', 'story_source')
    op.drop_column('runs', 'final_story')
    op.drop_column('runs', 'user_story')
    op.drop_column('runs', 'test_creation_mode')
    # ### end Alembic commands ###
